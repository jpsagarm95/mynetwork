#include<stdio.h>
#include<string.h>
#include<stdlib.h>
int debug_mode;
char ip_name[100];
int port_number;
int seq_num;
int MAX_PACKET_LENGTH;
int PACKET_GEN_RATE;
int MAX_PACKETS;
int WINDOW_SIZE;
int BUFFER_SIZE;
int HEADER_SIZE;	// just the number of bytes req for the seq number
char** buffer;
int* len_of_packets_in_buf;
// need to change to the uniform distribution
int size_gen(){
	int i = rand() % (MAX_PACKET_LENGTH - 40);
	return (40 + i);
}


int main(int argc, char * argv[]){


	initializer(argc, argv);

//	printf("%d %s %d %d %d %d %d %d %d\n", debug_mode, ip_name, port_number, seq_num, MAX_PACKET_LENGTH, PACKET_GEN_RATE, MAX_PACKETS, WINDOW_SIZE, BUFFER_SIZE);
	return 0;
}

void initializer(int argc, char* argv[]){
	srand(time(NULL));
	int i = 0;
	debug_mode = 0;
	seq_num = 3;
	for(i = 1 ; i < argc ; i++){
		if(strcmp(argv[i],"-d") == 0){
			debug_mode = 1;
		}else if(strcmp(argv[i],"-s") == 0){
			i++;
			strcpy(ip_name, argv[i]);
		}else if(strcmp(argv[i],"-p") == 0){
			i++;
			port_number = atoi(argv[i]);
		}else if(strcmp(argv[i],"-n") == 0){
			i++;
			seq_num = atoi(argv[i]);
		}else if(strcmp(argv[i],"-L") == 0){
			i++;
			MAX_PACKET_LENGTH = atoi(argv[i]);
		}else if(strcmp(argv[i],"-R") == 0){
			i++;
			PACKET_GEN_RATE = atoi(argv[i]);
		}else if(strcmp(argv[i],"-N") == 0){
			i++;
			MAX_PACKETS = atoi(argv[i]);
		}else if(strcmp(argv[i],"-W") == 0){
			i++;
			WINDOW_SIZE = atoi(argv[i]);
		}else if(strcmp(argv[i],"-B") == 0){
			i++;
			BUFFER_SIZE = atoi(argv[i]);
		}
	}
	buffer = (char**)malloc(sizeof(char*) * BUFFER_SIZE);
	for(i = 0 ; i < BUFFER_SIZE ; i++){
		buffer[i] = (char*)malloc(sizeof(char) * (HEADER_SIZE + MAX_PACKET_LENGTH));
	}
	return;
}

void buffer_allocation(char* packet, int packet_length){



}
